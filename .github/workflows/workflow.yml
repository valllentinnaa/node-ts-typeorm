# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Example workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: example_db
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Create test env file
        run: |
          touch .env.testing
          echo NODE_ENV='testing' >> .env.testing
          echo PORT=3000 >> .env.testing
          echo DB_NAME='example_db' >> .env.testing
          echo DB_USER='postgres' >> .env.testing
          echo DB_PASS='postgres' >> .env.testing
          echo TEST_USER_PASSWORD='12345' >> .env.testing
          echo SECRET='p)5-%+8.ZhxKtD-' >> .env.testing
          echo DROP_DB=true >> .env.testing

      # - name: Run migrations
      #   run: npm run migration:test

      - run: npm run build --if-present
      - name: Run server in the background and run tests
        run: |
          npm run start:test &
          sleep 10 &&
          curl http://localhost:3000 &&
          npm test
